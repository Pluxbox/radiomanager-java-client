/*
 * Pluxbox Radiomanager Client
 * Pluxbox RadioManager gives you the power, flexibility and speed you always wanted in a lightweight and easy-to-use web-based radio solution. With Pluxbox RadioManager you can organise your radio workflow and automate your omnichannel communication with your listeners. We offer wide range specialised services for the radio and connections like Hybrid Radio, Visual Radio, your website and social media without losing focus on your broadcast. For more information visit https://pluxbox.com
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pluxbox.radiomanager.api.v2;

import com.pluxbox.radiomanager.api.invoker.ApiException;
import com.pluxbox.radiomanager.api.models.Forbidden;
import com.pluxbox.radiomanager.api.models.GenreResult;
import com.pluxbox.radiomanager.api.models.GenreResults;
import com.pluxbox.radiomanager.api.models.NotFound;
import com.pluxbox.radiomanager.api.models.TooManyRequests;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GenreApi
 */
@Ignore
public class GenreApiTest {

    private final GenreApi api = new GenreApi();

    
    /**
     * Get genre by id
     *
     * Get genre by id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGenreByIdTest() throws ApiException {
        Long id = null;
        Long externalStationId = null;
        GenreResult response = api.getGenreById(id, externalStationId);

        // TODO: test validations
    }
    
    /**
     * List all genres.
     *
     * List all genres.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listGenresTest() throws ApiException {
        Long page = null;
        Long parentId = null;
        Long programId = null;
        Long broadcastId = null;
        Long externalStationId = null;
        GenreResults response = api.listGenres(page, parentId, programId, broadcastId, externalStationId);

        // TODO: test validations
    }
    
}
