/*
 * RadioManager
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pluxbox.radiomanager.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pluxbox.radiomanager.api.models.BlockRelationsProgram;
import com.pluxbox.radiomanager.api.models.BroadcastRelationsBlocks;
import com.pluxbox.radiomanager.api.models.BroadcastRelationsGenre;
import com.pluxbox.radiomanager.api.models.BroadcastRelationsGroup;
import com.pluxbox.radiomanager.api.models.BroadcastRelationsItems;
import com.pluxbox.radiomanager.api.models.BroadcastRelationsModelType;
import com.pluxbox.radiomanager.api.models.BroadcastRelationsPresenters;
import com.pluxbox.radiomanager.api.models.BroadcastRelationsTags;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.pluxbox.radiomanager.api.invoker.JSON;

/**
 * BroadcastRelations
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BroadcastRelations {
  public static final String SERIALIZED_NAME_GENRE = "genre";
  @SerializedName(SERIALIZED_NAME_GENRE)
  private BroadcastRelationsGenre genre;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private BroadcastRelationsItems items;

  public static final String SERIALIZED_NAME_BLOCKS = "blocks";
  @SerializedName(SERIALIZED_NAME_BLOCKS)
  private BroadcastRelationsBlocks blocks;

  public static final String SERIALIZED_NAME_PROGRAM = "program";
  @SerializedName(SERIALIZED_NAME_PROGRAM)
  private BlockRelationsProgram program;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private BroadcastRelationsTags tags;

  public static final String SERIALIZED_NAME_PRESENTERS = "presenters";
  @SerializedName(SERIALIZED_NAME_PRESENTERS)
  private BroadcastRelationsPresenters presenters;

  public static final String SERIALIZED_NAME_MODEL_TYPE = "model_type";
  @SerializedName(SERIALIZED_NAME_MODEL_TYPE)
  private BroadcastRelationsModelType modelType;

  public static final String SERIALIZED_NAME_GROUP = "group";
  @SerializedName(SERIALIZED_NAME_GROUP)
  private BroadcastRelationsGroup group;

  public BroadcastRelations() {
  }

  public BroadcastRelations genre(BroadcastRelationsGenre genre) {
    
    this.genre = genre;
    return this;
  }

   /**
   * Get genre
   * @return genre
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BroadcastRelationsGenre getGenre() {
    return genre;
  }


  public void setGenre(BroadcastRelationsGenre genre) {
    this.genre = genre;
  }


  public BroadcastRelations items(BroadcastRelationsItems items) {
    
    this.items = items;
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BroadcastRelationsItems getItems() {
    return items;
  }


  public void setItems(BroadcastRelationsItems items) {
    this.items = items;
  }


  public BroadcastRelations blocks(BroadcastRelationsBlocks blocks) {
    
    this.blocks = blocks;
    return this;
  }

   /**
   * Get blocks
   * @return blocks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BroadcastRelationsBlocks getBlocks() {
    return blocks;
  }


  public void setBlocks(BroadcastRelationsBlocks blocks) {
    this.blocks = blocks;
  }


  public BroadcastRelations program(BlockRelationsProgram program) {
    
    this.program = program;
    return this;
  }

   /**
   * Get program
   * @return program
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BlockRelationsProgram getProgram() {
    return program;
  }


  public void setProgram(BlockRelationsProgram program) {
    this.program = program;
  }


  public BroadcastRelations tags(BroadcastRelationsTags tags) {
    
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BroadcastRelationsTags getTags() {
    return tags;
  }


  public void setTags(BroadcastRelationsTags tags) {
    this.tags = tags;
  }


  public BroadcastRelations presenters(BroadcastRelationsPresenters presenters) {
    
    this.presenters = presenters;
    return this;
  }

   /**
   * Get presenters
   * @return presenters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BroadcastRelationsPresenters getPresenters() {
    return presenters;
  }


  public void setPresenters(BroadcastRelationsPresenters presenters) {
    this.presenters = presenters;
  }


  public BroadcastRelations modelType(BroadcastRelationsModelType modelType) {
    
    this.modelType = modelType;
    return this;
  }

   /**
   * Get modelType
   * @return modelType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BroadcastRelationsModelType getModelType() {
    return modelType;
  }


  public void setModelType(BroadcastRelationsModelType modelType) {
    this.modelType = modelType;
  }


  public BroadcastRelations group(BroadcastRelationsGroup group) {
    
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BroadcastRelationsGroup getGroup() {
    return group;
  }


  public void setGroup(BroadcastRelationsGroup group) {
    this.group = group;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BroadcastRelations broadcastRelations = (BroadcastRelations) o;
    return Objects.equals(this.genre, broadcastRelations.genre) &&
        Objects.equals(this.items, broadcastRelations.items) &&
        Objects.equals(this.blocks, broadcastRelations.blocks) &&
        Objects.equals(this.program, broadcastRelations.program) &&
        Objects.equals(this.tags, broadcastRelations.tags) &&
        Objects.equals(this.presenters, broadcastRelations.presenters) &&
        Objects.equals(this.modelType, broadcastRelations.modelType) &&
        Objects.equals(this.group, broadcastRelations.group);
  }

  @Override
  public int hashCode() {
    return Objects.hash(genre, items, blocks, program, tags, presenters, modelType, group);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BroadcastRelations {\n");
    sb.append("    genre: ").append(toIndentedString(genre)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    blocks: ").append(toIndentedString(blocks)).append("\n");
    sb.append("    program: ").append(toIndentedString(program)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    presenters: ").append(toIndentedString(presenters)).append("\n");
    sb.append("    modelType: ").append(toIndentedString(modelType)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("genre");
    openapiFields.add("items");
    openapiFields.add("blocks");
    openapiFields.add("program");
    openapiFields.add("tags");
    openapiFields.add("presenters");
    openapiFields.add("model_type");
    openapiFields.add("group");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to BroadcastRelations
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!BroadcastRelations.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BroadcastRelations is not found in the empty JSON string", BroadcastRelations.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!BroadcastRelations.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BroadcastRelations` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `genre`
      if (jsonObj.get("genre") != null && !jsonObj.get("genre").isJsonNull()) {
        BroadcastRelationsGenre.validateJsonObject(jsonObj.getAsJsonObject("genre"));
      }
      // validate the optional field `items`
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        BroadcastRelationsItems.validateJsonObject(jsonObj.getAsJsonObject("items"));
      }
      // validate the optional field `blocks`
      if (jsonObj.get("blocks") != null && !jsonObj.get("blocks").isJsonNull()) {
        BroadcastRelationsBlocks.validateJsonObject(jsonObj.getAsJsonObject("blocks"));
      }
      // validate the optional field `program`
      if (jsonObj.get("program") != null && !jsonObj.get("program").isJsonNull()) {
        BlockRelationsProgram.validateJsonObject(jsonObj.getAsJsonObject("program"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        BroadcastRelationsTags.validateJsonObject(jsonObj.getAsJsonObject("tags"));
      }
      // validate the optional field `presenters`
      if (jsonObj.get("presenters") != null && !jsonObj.get("presenters").isJsonNull()) {
        BroadcastRelationsPresenters.validateJsonObject(jsonObj.getAsJsonObject("presenters"));
      }
      // validate the optional field `model_type`
      if (jsonObj.get("model_type") != null && !jsonObj.get("model_type").isJsonNull()) {
        BroadcastRelationsModelType.validateJsonObject(jsonObj.getAsJsonObject("model_type"));
      }
      // validate the optional field `group`
      if (jsonObj.get("group") != null && !jsonObj.get("group").isJsonNull()) {
        BroadcastRelationsGroup.validateJsonObject(jsonObj.getAsJsonObject("group"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BroadcastRelations.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BroadcastRelations' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BroadcastRelations> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BroadcastRelations.class));

       return (TypeAdapter<T>) new TypeAdapter<BroadcastRelations>() {
           @Override
           public void write(JsonWriter out, BroadcastRelations value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BroadcastRelations read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BroadcastRelations given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BroadcastRelations
  * @throws IOException if the JSON string is invalid with respect to BroadcastRelations
  */
  public static BroadcastRelations fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BroadcastRelations.class);
  }

 /**
  * Convert an instance of BroadcastRelations to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

