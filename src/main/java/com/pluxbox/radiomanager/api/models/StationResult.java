/*
 * RadioManager
 * RadioManager
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pluxbox.radiomanager.api.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pluxbox.radiomanager.api.models.StationResultStation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * StationResult
 */

public class StationResult {
  @SerializedName("station")
  private StationResultStation station = null;

  public StationResult station(StationResultStation station) {
    this.station = station;
    return this;
  }

   /**
   * Get station
   * @return station
  **/
  @ApiModelProperty(value = "")
  public StationResultStation getStation() {
    return station;
  }

  public void setStation(StationResultStation station) {
    this.station = station;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StationResult stationResult = (StationResult) o;
    return Objects.equals(this.station, stationResult.station);
  }

  @Override
  public int hashCode() {
    return Objects.hash(station);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StationResult {\n");
    
    sb.append("    station: ").append(toIndentedString(station)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

