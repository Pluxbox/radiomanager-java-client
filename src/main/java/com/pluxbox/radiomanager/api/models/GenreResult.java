/*
 * RadioManager
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pluxbox.radiomanager.api.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pluxbox.radiomanager.api.models.GenreRelationsBroadcasts;
import com.pluxbox.radiomanager.api.models.GenreRelationsPrograms;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.pluxbox.radiomanager.api.invoker.JSON;

/**
 * GenreResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GenreResult {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_URN = "urn";
  @SerializedName(SERIALIZED_NAME_URN)
  private String urn;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private Long parentId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_BROADCASTS = "broadcasts";
  @SerializedName(SERIALIZED_NAME_BROADCASTS)
  private GenreRelationsBroadcasts broadcasts;

  public static final String SERIALIZED_NAME_PROGRAMS = "programs";
  @SerializedName(SERIALIZED_NAME_PROGRAMS)
  private GenreRelationsPrograms programs;

  public static final String SERIALIZED_NAME_EXTERNAL_STATION_ID = "_external_station_id";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_STATION_ID)
  private Long externalStationId;

  public GenreResult() {
  }

  public GenreResult id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2617", required = true, value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public GenreResult urn(String urn) {
    
    this.urn = urn;
    return this;
  }

   /**
   * Get urn
   * @return urn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "urn:tva:metadata:cs:ContentCS:2013:3.1.1.1.3", value = "")

  public String getUrn() {
    return urn;
  }


  public void setUrn(String urn) {
    this.urn = urn;
  }


  public GenreResult parentId(Long parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Get parentId
   * @return parentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2614", value = "")

  public Long getParentId() {
    return parentId;
  }


  public void setParentId(Long parentId) {
    this.parentId = parentId;
  }


  public GenreResult name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Chat", required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public GenreResult broadcasts(GenreRelationsBroadcasts broadcasts) {
    
    this.broadcasts = broadcasts;
    return this;
  }

   /**
   * Get broadcasts
   * @return broadcasts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GenreRelationsBroadcasts getBroadcasts() {
    return broadcasts;
  }


  public void setBroadcasts(GenreRelationsBroadcasts broadcasts) {
    this.broadcasts = broadcasts;
  }


  public GenreResult programs(GenreRelationsPrograms programs) {
    
    this.programs = programs;
    return this;
  }

   /**
   * Get programs
   * @return programs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GenreRelationsPrograms getPrograms() {
    return programs;
  }


  public void setPrograms(GenreRelationsPrograms programs) {
    this.programs = programs;
  }


  public GenreResult externalStationId(Long externalStationId) {
    
    this.externalStationId = externalStationId;
    return this;
  }

   /**
   * Get externalStationId
   * @return externalStationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getExternalStationId() {
    return externalStationId;
  }


  public void setExternalStationId(Long externalStationId) {
    this.externalStationId = externalStationId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenreResult genreResult = (GenreResult) o;
    return Objects.equals(this.id, genreResult.id) &&
        Objects.equals(this.urn, genreResult.urn) &&
        Objects.equals(this.parentId, genreResult.parentId) &&
        Objects.equals(this.name, genreResult.name) &&
        Objects.equals(this.broadcasts, genreResult.broadcasts) &&
        Objects.equals(this.programs, genreResult.programs) &&
        Objects.equals(this.externalStationId, genreResult.externalStationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, urn, parentId, name, broadcasts, programs, externalStationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenreResult {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    urn: ").append(toIndentedString(urn)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    broadcasts: ").append(toIndentedString(broadcasts)).append("\n");
    sb.append("    programs: ").append(toIndentedString(programs)).append("\n");
    sb.append("    externalStationId: ").append(toIndentedString(externalStationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("urn");
    openapiFields.add("parent_id");
    openapiFields.add("name");
    openapiFields.add("broadcasts");
    openapiFields.add("programs");
    openapiFields.add("_external_station_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("name");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GenreResult
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GenreResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GenreResult is not found in the empty JSON string", GenreResult.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!GenreResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GenreResult` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GenreResult.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("urn") != null && !jsonObj.get("urn").isJsonNull()) && !jsonObj.get("urn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urn").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `broadcasts`
      if (jsonObj.get("broadcasts") != null && !jsonObj.get("broadcasts").isJsonNull()) {
        GenreRelationsBroadcasts.validateJsonObject(jsonObj.getAsJsonObject("broadcasts"));
      }
      // validate the optional field `programs`
      if (jsonObj.get("programs") != null && !jsonObj.get("programs").isJsonNull()) {
        GenreRelationsPrograms.validateJsonObject(jsonObj.getAsJsonObject("programs"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GenreResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GenreResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GenreResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GenreResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GenreResult>() {
           @Override
           public void write(JsonWriter out, GenreResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GenreResult read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GenreResult given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GenreResult
  * @throws IOException if the JSON string is invalid with respect to GenreResult
  */
  public static GenreResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GenreResult.class);
  }

 /**
  * Convert an instance of GenreResult to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

