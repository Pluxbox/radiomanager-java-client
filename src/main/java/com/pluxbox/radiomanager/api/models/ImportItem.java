/*
 * RadioManager
 * RadioManager
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pluxbox.radiomanager.api.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pluxbox.radiomanager.api.models.ImportItemFieldValues;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * ImportItem
 */

public class ImportItem {
  @SerializedName("model_type_id")
  private Long modelTypeId = null;

  @SerializedName("external_id")
  private Long externalId = null;

  @SerializedName("field_values")
  private ImportItemFieldValues fieldValues = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("duration")
  private Long duration = null;

  @SerializedName("start")
  private OffsetDateTime start = null;

  @SerializedName("recommended")
  private Boolean recommended = null;

  @SerializedName("static_start")
  private Boolean staticStart = null;

  @SerializedName("details")
  private String details = null;

  @SerializedName("contacts")
  private List<Integer> contacts = null;

  @SerializedName("tags")
  private List<Integer> tags = null;

  public ImportItem modelTypeId(Long modelTypeId) {
    this.modelTypeId = modelTypeId;
    return this;
  }

   /**
   * Get modelTypeId
   * @return modelTypeId
  **/
  @ApiModelProperty(example = "14", required = true, value = "")
  public Long getModelTypeId() {
    return modelTypeId;
  }

  public void setModelTypeId(Long modelTypeId) {
    this.modelTypeId = modelTypeId;
  }

  public ImportItem externalId(Long externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * Get externalId
   * @return externalId
  **/
  @ApiModelProperty(example = "0", required = true, value = "")
  public Long getExternalId() {
    return externalId;
  }

  public void setExternalId(Long externalId) {
    this.externalId = externalId;
  }

  public ImportItem fieldValues(ImportItemFieldValues fieldValues) {
    this.fieldValues = fieldValues;
    return this;
  }

   /**
   * Get fieldValues
   * @return fieldValues
  **/
  @ApiModelProperty(value = "")
  public ImportItemFieldValues getFieldValues() {
    return fieldValues;
  }

  public void setFieldValues(ImportItemFieldValues fieldValues) {
    this.fieldValues = fieldValues;
  }

  public ImportItem title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(example = "FooBar Show", value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ImportItem duration(Long duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @ApiModelProperty(example = "120", value = "")
  public Long getDuration() {
    return duration;
  }

  public void setDuration(Long duration) {
    this.duration = duration;
  }

  public ImportItem start(OffsetDateTime start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @ApiModelProperty(example = "2017-06-23T12:00:00+02:00", value = "")
  public OffsetDateTime getStart() {
    return start;
  }

  public void setStart(OffsetDateTime start) {
    this.start = start;
  }

  public ImportItem recommended(Boolean recommended) {
    this.recommended = recommended;
    return this;
  }

   /**
   * Get recommended
   * @return recommended
  **/
  @ApiModelProperty(example = "false", value = "")
  public Boolean isRecommended() {
    return recommended;
  }

  public void setRecommended(Boolean recommended) {
    this.recommended = recommended;
  }

  public ImportItem staticStart(Boolean staticStart) {
    this.staticStart = staticStart;
    return this;
  }

   /**
   * Get staticStart
   * @return staticStart
  **/
  @ApiModelProperty(example = "false", value = "")
  public Boolean isStaticStart() {
    return staticStart;
  }

  public void setStaticStart(Boolean staticStart) {
    this.staticStart = staticStart;
  }

  public ImportItem details(String details) {
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @ApiModelProperty(example = "<div class=\"rm-content\">Details of item</div>\\n", value = "")
  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }

  public ImportItem contacts(List<Integer> contacts) {
    this.contacts = contacts;
    return this;
  }

  public ImportItem addContactsItem(Integer contactsItem) {
    if (this.contacts == null) {
      this.contacts = new ArrayList<Integer>();
    }
    this.contacts.add(contactsItem);
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getContacts() {
    return contacts;
  }

  public void setContacts(List<Integer> contacts) {
    this.contacts = contacts;
  }

  public ImportItem tags(List<Integer> tags) {
    this.tags = tags;
    return this;
  }

  public ImportItem addTagsItem(Integer tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Integer>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getTags() {
    return tags;
  }

  public void setTags(List<Integer> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImportItem importItem = (ImportItem) o;
    return Objects.equals(this.modelTypeId, importItem.modelTypeId) &&
        Objects.equals(this.externalId, importItem.externalId) &&
        Objects.equals(this.fieldValues, importItem.fieldValues) &&
        Objects.equals(this.title, importItem.title) &&
        Objects.equals(this.duration, importItem.duration) &&
        Objects.equals(this.start, importItem.start) &&
        Objects.equals(this.recommended, importItem.recommended) &&
        Objects.equals(this.staticStart, importItem.staticStart) &&
        Objects.equals(this.details, importItem.details) &&
        Objects.equals(this.contacts, importItem.contacts) &&
        Objects.equals(this.tags, importItem.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelTypeId, externalId, fieldValues, title, duration, start, recommended, staticStart, details, contacts, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImportItem {\n");
    
    sb.append("    modelTypeId: ").append(toIndentedString(modelTypeId)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    fieldValues: ").append(toIndentedString(fieldValues)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    recommended: ").append(toIndentedString(recommended)).append("\n");
    sb.append("    staticStart: ").append(toIndentedString(staticStart)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

